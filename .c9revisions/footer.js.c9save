{"ts":1348294706240,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * Flux JavaScript Library\n * Copyright (c) 2010 Leonardo Dutra Constancio\n * MIT License (http://jsflux.googlecode.com/svn/trunk/mit-license.txt)\n */\nflux = {};\n\nvar PI = Math.PI,\n    PIx2  = PI * 2,\n    proto;\n    \n\nfunction ceil(n) {\n    return n % 1 ? (n > 0 ? n + 1 : n) | 0 : n;\n}\n\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n\nfunction floor(n) {\n    return n % 1 ? (n > 0 ? n : n - 1) | 0 : n;\n}\n\nfunction round(n) {\n    return (n < 0 ? -0.5 : 0.5) + n | 0;\n}\n\nfunction max(a, b) {\n    return a < b ? b : a;\n}\n\nfunction min(a, b) {\n    return a < b ? a : b;\n}\n\nfunction extend(super_, extension)\n{\n    var base = function () {};\n    base.prototype = new super_();\n    base = new base();\n    for (var property in extension)\n    {\n        base[property] = extension[property];\n    }\n    base.super_ = super_;\n    return base;\n}\n\nfunction deepCopyArray (array)\n{\n    return array instanceof Array ? JSON.parse(JSON.stringify(array)) : null;\n}"]],"start1":0,"start2":0,"length1":0,"length2":952}]],"length":952}
{"contributors":[],"silentsave":false,"ts":1349414227645,"patch":[[{"diffs":[[0,"xt)\n */\n"],[-1,""],[0,""],[1,"window."],[0,"flux = {"]],"start1":146,"start2":146,"length1":16,"length2":23},{"diffs":[[0," 2,\n    "],[-1,"proto"],[1,"_"],[0,";\n    \n\n"]],"start1":207,"start2":207,"length1":21,"length2":17},{"diffs":[[0,"\n}\n\n"],[-1,"function abs(n) {\n    return n < 0 ? -n : n;\n}\n\n"],[0,"func"]],"start1":290,"start2":290,"length1":56,"length2":8},{"diffs":[[0," 1) | 0 : n;\n}\n\n"],[1,"function abs(n) {\n    return n < 0 ? -n : n;\n}\n\n"],[0,"function round(n"]],"start1":349,"start2":349,"length1":32,"length2":80},{"diffs":[[0,"? a : b;\n}\n\n"],[1,"function clamp(n, min, max) {\n\treturn min < n ? n < max ? n : max : min;\n}\n\nfunction randomRange(min, max) {\n    return Math.random() * (max - min) + min; \n}\n\n//function sign(x) {\n//    return x > 0 ? 1 : x < 0 ? -1 : 0;\n//}\n\n"],[0,"function ext"]],"start1":565,"start2":565,"length1":24,"length2":250}]],"length":1181,"saved":false}
{"ts":1349414260885,"patch":[[{"diffs":[[0,"ndom"],[-1,"Range"],[1,"From"],[0,"(min"]],"start1":664,"start2":664,"length1":13,"length2":12}]],"length":1180,"saved":false}
{"ts":1349414644687,"patch":[[{"diffs":[[0,"on abs(n) {\n"],[-1,"  "],[0,"  return n <"]],"start1":371,"start2":371,"length1":26,"length2":24},{"diffs":[[0," return "],[-1,"n < 0"],[1,"0 > n"],[0," ? -n : "]],"start1":384,"start2":384,"length1":21,"length2":21},{"diffs":[[0,"> n ? -n : n;\n}\n"],[-1,"\n"],[0,"function round(n"]],"start1":394,"start2":394,"length1":33,"length2":32},{"diffs":[[0,"und("],[-1,"n"],[1,"a"],[0,") {\n"],[-1,"  "],[0,"  return"],[-1," (n < 0"],[1,"(0 > n"],[0," ? -"]],"start1":421,"start2":421,"length1":30,"length2":27}]],"length":1174,"saved":false}
{"ts":1349414654065,"patch":[[{"diffs":[[0,"on abs(n) {\n"],[1,"  "],[0,"  return 0 >"]],"start1":371,"start2":371,"length1":24,"length2":26},{"diffs":[[0,"und("],[-1,"a"],[1,"n"],[0,") {\n"],[1,"  "],[0,"  re"]],"start1":423,"start2":423,"length1":13,"length2":15}]],"length":1178,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349463486123,"patch":[[{"diffs":[[0," */\n"],[-1,"window.flux = {};\n\nvar PI = Math.PI,\n    PIx2  = PI * 2,\n    _;\n    \n\nfunction ceil(n) {\n    return n % 1 ? (n > 0 ? n + 1 : n) | 0 : n;\n}\n\nfunction floor(n) {\n    return n % 1 ? (n > 0 ? n : n - 1) | 0 : n;\n}\n\nfunction abs(n) {\n    return 0 > n ? -n : n;\n}\nfunction round(n) {\n    return(0 > n ? -0.5 : 0.5) + n | 0;\n}\n\nfunction max(a, b) {\n    return a < b ? b : a;\n}\n\nfunction min(a, b) {\n    return a < b ? a : b;\n}\n\nfunction clamp(n, min, max) {\n\treturn min < n ? n < max ? n : max : min;\n}\n\nfunction randomFrom(min, max) {\n    return Math.random() * (max - min) + min; \n}\n\n//function sign(x) {\n//    return x > 0 ? 1 : x < 0 ? -1 : 0;\n//}\n\nfunction extend(super_, extension)\n{\n    var base = function () {};\n    base.prototype = new super_();\n    base = new base();\n    for (var property in extension)\n    {\n        base[property] = extension[property];\n    }\n    base.super_ = super_;\n    return base;\n}\n\nfunction deepCopyArray (array)\n{\n    return array instanceof Array ? JSON.parse(JSON.stringify(array)) : null;\n}"]],"start1":150,"start2":150,"length1":1028,"length2":4}]],"length":154,"saved":false}
{"ts":1349463498011,"patch":[[{"diffs":[[0,"xt)\n */\n"],[1,"})(this);"]],"start1":146,"start2":146,"length1":8,"length2":17}]],"length":163,"saved":false}
{"ts":1349463503184,"patch":[[{"diffs":[[0,"xt)\n */\n"],[1," \n"],[0,"})(this)"]],"start1":146,"start2":146,"length1":16,"length2":18}]],"length":165,"saved":false}
