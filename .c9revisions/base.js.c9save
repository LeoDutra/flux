{"ts":1348294706240,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * Flux JavaScript Library\n * Copyright (c) 2010 Leonardo Dutra Constancio\n * MIT License (http://jsflux.googlecode.com/svn/trunk/mit-license.txt)\n */\nflux = {};\n\nvar PI = Math.PI,\n    PIx2  = PI * 2,\n    proto;\n    \n\nfunction ceil(n) {\n    return n % 1 ? (n > 0 ? n + 1 : n) | 0 : n;\n}\n\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n\nfunction floor(n) {\n    return n % 1 ? (n > 0 ? n : n - 1) | 0 : n;\n}\n\nfunction round(n) {\n    return (n < 0 ? -0.5 : 0.5) + n | 0;\n}\n\nfunction max(a, b) {\n    return a < b ? b : a;\n}\n\nfunction min(a, b) {\n    return a < b ? a : b;\n}\n\nfunction extend(super_, extension)\n{\n    var base = function () {};\n    base.prototype = new super_();\n    base = new base();\n    for (var property in extension)\n    {\n        base[property] = extension[property];\n    }\n    base.super_ = super_;\n    return base;\n}\n\nfunction deepCopyArray (array)\n{\n    return array instanceof Array ? JSON.parse(JSON.stringify(array)) : null;\n}"]],"start1":0,"start2":0,"length1":0,"length2":952}]],"length":952}
